/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.Customer;

import Business.Airliner;
import javax.swing.JPanel;
import Business.AirlinerDirectory;
import Business.FlightSchedule;
import Business.CustomerDirectory;
import Business.Customer;
import Business.FlightScheduleDirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author aman9
 */
public class SearchFlightJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SearchFlightJPanel
     */
    JPanel travelAgencyContainer;
    private AirlinerDirectory airlinerDirectory;
   // private FlightSchedule flightSchedule;
    private CustomerDirectory customerDirectory;
    private Customer cust;
    private FlightScheduleDirectory flightDirectory;
    private int flag=0;
    public SearchFlightJPanel(JPanel travelAgencyContainer,AirlinerDirectory airlinerDirectory,CustomerDirectory customerDirectory,Customer cust) {
        initComponents();
        this.travelAgencyContainer=travelAgencyContainer;
        this.airlinerDirectory=airlinerDirectory;
        //this.flightSchedule=flightSchedule;
        this.customerDirectory=customerDirectory;
        this.cust=cust;
        //this.flightDirectory=flightDirectory;
        
        //originSearchTextField.setText(cust.getOrigin());
        //destinationSearchTextField.setText(cust.getDestination());
        //travelDateSearchTextField.setText(cust.getDate()); 
        //numberOfPassengersSearchTextField.setText(String.valueOf(cust.getNumberOfPassengers()));
        //travelDateSearchTextField.setEditable(false);
        displaySearchData();
        listMatchedFlights();
    }

    public void displaySearchData(){
        
        originSearchTextField.setText(cust.getOrigin());
        destinationSearchTextField.setText(cust.getDestination());
        numberOfPassengersSearchTextField.setText(String.valueOf(cust.getNumberOfPassengers()));
        originSearchTextField.setEditable(false);
        destinationSearchTextField.setEditable(false);
        numberOfPassengersSearchTextField.setEditable(false);
    }
    
    public void listMatchedFlights(){
        int rowCount=searchFlightResultJTable.getRowCount();
        DefaultTableModel dtm = (DefaultTableModel)searchFlightResultJTable.getModel();
        
        String origin = originSearchTextField.getText();
        String destination = destinationSearchTextField.getText();        
        
        for (int i = rowCount-1; i>=0; i-- ){
            dtm.removeRow(i);
        }
        
        for (Airliner air: airlinerDirectory.getAirlineDirectory()){
            for (FlightSchedule fs: air.getFlightScheduleDirectory().getFlightSchedule()){
                if(origin.equalsIgnoreCase(fs.getFromLocation()) && destination.equalsIgnoreCase(fs.getToLocation())){
                    Object row[]= new Object[4];
                    row[0] = air;
                    //System.out.println(fs);
                    //row[0] = air.getAirlineName();
                    row[1] = fs.getFlightNumber();
                    row[2] = fs.getTimeOfDay();
                    row[3] = fs;
                    dtm.addRow(row);
                }
                
            }
        }    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchFlightLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchFlightResultJTable = new javax.swing.JTable();
        bookFlightBtn = new javax.swing.JButton();
        originSearchLabel = new javax.swing.JLabel();
        originSearchTextField = new javax.swing.JTextField();
        destinationSearchLabel = new javax.swing.JLabel();
        destinationSearchTextField = new javax.swing.JTextField();
        numberOfPassengersSearchLabel = new javax.swing.JLabel();
        numberOfPassengersSearchTextField = new javax.swing.JTextField();

        searchFlightLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        searchFlightLabel.setText("Search Flight Results");

        searchFlightResultJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Airline", "Flight Number", "Time of Day", "Flight Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(searchFlightResultJTable);

        bookFlightBtn.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        bookFlightBtn.setText("Book Flight");
        bookFlightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookFlightBtnActionPerformed(evt);
            }
        });

        originSearchLabel.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        originSearchLabel.setText("Origin:");

        destinationSearchLabel.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        destinationSearchLabel.setText("Destination:");

        numberOfPassengersSearchLabel.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        numberOfPassengersSearchLabel.setText("Number of Passengers:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(199, 199, 199)
                                .addComponent(searchFlightLabel))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(originSearchLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(originSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(destinationSearchLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(destinationSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(numberOfPassengersSearchLabel)
                                    .addGap(68, 68, 68)
                                    .addComponent(numberOfPassengersSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(350, 350, 350)
                        .addComponent(bookFlightBtn)))
                .addGap(231, 231, 231))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(searchFlightLabel)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(originSearchLabel)
                    .addComponent(originSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destinationSearchLabel)
                    .addComponent(destinationSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numberOfPassengersSearchLabel)
                    .addComponent(numberOfPassengersSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(bookFlightBtn)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bookFlightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookFlightBtnActionPerformed
        int selectedRows=searchFlightResultJTable.getSelectedRow();
        if(selectedRows<0){
            JOptionPane.showMessageDialog(null, "Please select a row from the table first" , "Warning" , JOptionPane.WARNING_MESSAGE);
            return;
        }
        else{   
            FlightSchedule flight=(FlightSchedule)searchFlightResultJTable.getValueAt(selectedRows,3);
            BookFlightJPanel bfjp = new BookFlightJPanel(travelAgencyContainer,airlinerDirectory,customerDirectory,cust,flight);
            travelAgencyContainer.add("BookFlightJPanel", bfjp);
            CardLayout layout= (CardLayout)travelAgencyContainer.getLayout();
            layout.next(travelAgencyContainer);
        }
    }//GEN-LAST:event_bookFlightBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bookFlightBtn;
    private javax.swing.JLabel destinationSearchLabel;
    private javax.swing.JTextField destinationSearchTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel numberOfPassengersSearchLabel;
    private javax.swing.JTextField numberOfPassengersSearchTextField;
    private javax.swing.JLabel originSearchLabel;
    private javax.swing.JTextField originSearchTextField;
    private javax.swing.JLabel searchFlightLabel;
    private javax.swing.JTable searchFlightResultJTable;
    // End of variables declaration//GEN-END:variables
}
