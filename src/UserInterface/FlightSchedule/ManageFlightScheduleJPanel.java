/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.FlightSchedule;

import Business.Airliner;
import Business.AirlinerDirectory;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Business.FlightSchedule;
import java.awt.CardLayout;
import javax.swing.JOptionPane;

/**
 *
 * @author aman9
 */
public class ManageFlightScheduleJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageFlightScheduleJPanel
     */
    JPanel travelAgencyContainer;
    Airliner air;
    AirlinerDirectory airDir;
    
    public ManageFlightScheduleJPanel(JPanel travelAgencyContainer, Airliner air,AirlinerDirectory airDir ) {
        initComponents();
        this.travelAgencyContainer=travelAgencyContainer;
        this.air=air;
        this.airDir=airDir;
        airlineTextField.setText(air.getAirlineName());
        refreshTable();
    }

    public void refreshTable(){
        int rowCount=flightDetailsJTable.getRowCount();
        DefaultTableModel dtm = (DefaultTableModel)flightDetailsJTable.getModel();
        //dtm.setRowCount(0);
        for (int i = rowCount-1; i>=0; i-- ){
            dtm.removeRow(i);
        }
        
        for (FlightSchedule fs: air.getFlightScheduleDirectory().getFlightSchedule()){
            Object row[]= new Object[3];
            row[0] = fs;
            //System.out.println("row[0]"+row[0]);
            //row[1] = fs.getFlightNumber();
            //System.out.println("row[0]"+row[0]);
            row[1] = fs.getFromLocation();
            //System.out.println("row[1]"+row[1]);
            row[2] = fs.getToLocation();
            //System.out.println("row[2]"+row[2]);
            //row[1]=a.getAirlineName();
            dtm.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        flightDetailsJTable = new javax.swing.JTable();
        addFlightBtn = new javax.swing.JButton();
        viewFlightsBtn = new javax.swing.JButton();
        removeFlightBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        airlineTextField = new javax.swing.JTextField();
        backFlightSchBtn = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel1.setText("Manage Flight Schedule");

        flightDetailsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Flight Number", "From", "To"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(flightDetailsJTable);

        addFlightBtn.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        addFlightBtn.setText("Add Flight");
        addFlightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFlightBtnActionPerformed(evt);
            }
        });

        viewFlightsBtn.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        viewFlightsBtn.setText("View Flights");
        viewFlightsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewFlightsBtnActionPerformed(evt);
            }
        });

        removeFlightBtn.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        removeFlightBtn.setText("Remove");
        removeFlightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeFlightBtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel2.setText("Airline :");

        backFlightSchBtn.setText("<<Back");
        backFlightSchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backFlightSchBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(289, 289, 289)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(backFlightSchBtn)
                                .addGap(31, 31, 31)
                                .addComponent(removeFlightBtn)
                                .addGap(49, 49, 49)
                                .addComponent(addFlightBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(viewFlightsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(airlineTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(204, 204, 204))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(16, 16, 16)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(airlineTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeFlightBtn)
                    .addComponent(addFlightBtn)
                    .addComponent(viewFlightsBtn)
                    .addComponent(backFlightSchBtn))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addFlightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFlightBtnActionPerformed
        CreateFlightScheduleJPanel cfsjp = new CreateFlightScheduleJPanel(travelAgencyContainer,air);
        travelAgencyContainer.add("CreateFlightScheduleJPanel",cfsjp);
        CardLayout layout= (CardLayout)travelAgencyContainer.getLayout();
        layout.next(travelAgencyContainer);        
    }//GEN-LAST:event_addFlightBtnActionPerformed

    private void viewFlightsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewFlightsBtnActionPerformed
        int selectedRows=flightDetailsJTable.getSelectedRow();
        if(selectedRows<0){
            JOptionPane.showMessageDialog(null, "Please select a row from the table first" , "Warning" , JOptionPane.WARNING_MESSAGE);
            return;
        }
        else{
            FlightSchedule fs=(FlightSchedule)flightDetailsJTable.getValueAt(selectedRows, 0);
            ViewFlightScheduleJPanel vfsjp = new ViewFlightScheduleJPanel(travelAgencyContainer,fs);
            travelAgencyContainer.add("ViewFlightScheduleJPanel",vfsjp);
            CardLayout layout= (CardLayout)travelAgencyContainer.getLayout();
            layout.next(travelAgencyContainer);
        }
        
             
    }//GEN-LAST:event_viewFlightsBtnActionPerformed

    private void removeFlightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeFlightBtnActionPerformed
        int selectedRow=flightDetailsJTable.getSelectedRow();
        if (selectedRow >= 0){
            int selectionButton= JOptionPane.YES_NO_OPTION;
            int selectionResult= JOptionPane.showConfirmDialog(null, "Are you sure to delete??","Warning", selectionButton);
            if (selectionResult == JOptionPane.YES_OPTION){
                FlightSchedule fs = (FlightSchedule)flightDetailsJTable.getValueAt(selectedRow, 0);
                air.getFlightScheduleDirectory().removeFlightSchedule(fs);
                refreshTable();
            }            
        }
        else{
                JOptionPane.showMessageDialog(null, "Please select a row!!");
        }
    }//GEN-LAST:event_removeFlightBtnActionPerformed

    private void backFlightSchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backFlightSchBtnActionPerformed
        AirlineListJPanel aljp= new AirlineListJPanel(travelAgencyContainer,airDir,air);
        travelAgencyContainer.add("AirlineListJPanel",aljp);
        CardLayout layout= (CardLayout)travelAgencyContainer.getLayout();
        layout.next(travelAgencyContainer);
    }//GEN-LAST:event_backFlightSchBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addFlightBtn;
    private javax.swing.JTextField airlineTextField;
    private javax.swing.JButton backFlightSchBtn;
    private javax.swing.JTable flightDetailsJTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton removeFlightBtn;
    private javax.swing.JButton viewFlightsBtn;
    // End of variables declaration//GEN-END:variables
}
