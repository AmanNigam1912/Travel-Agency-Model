/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.FlightSchedule;

import Business.Airliner;
import javax.swing.JPanel;
import Business.FlightSchedule;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Date;
import javax.swing.JOptionPane;
import java.text.SimpleDateFormat;
/**
 *
 * @author aman9
 */
public class CreateFlightScheduleJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateFlightScheduleJPanel
     */
    JPanel travelAgencyContainer;
    Airliner air;
    private int flag;
    
    public CreateFlightScheduleJPanel(JPanel travelAgencyContainer,Airliner air) {
        initComponents();
        this.travelAgencyContainer=travelAgencyContainer;
        this.air=air;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        createFlightScheduleLabel = new javax.swing.JLabel();
        flightNumberLabel = new javax.swing.JLabel();
        flightNumberTextField = new javax.swing.JTextField();
        fromLocationLabel = new javax.swing.JLabel();
        fromLocationTextField = new javax.swing.JTextField();
        toLocationTextField = new javax.swing.JTextField();
        toLocationLabel = new javax.swing.JLabel();
        timeOfDayLabel = new javax.swing.JLabel();
        backBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        dateLabel = new javax.swing.JLabel();
        numberOfRowsLabel = new javax.swing.JLabel();
        numberOfRowsTextField = new javax.swing.JTextField();
        dateChooserFlight = new com.toedter.calendar.JDateChooser();
        timeOfDayComboBox = new javax.swing.JComboBox();

        createFlightScheduleLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        createFlightScheduleLabel.setText("Create Flight Schedule");

        flightNumberLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        flightNumberLabel.setText("Flight Number");

        fromLocationLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        fromLocationLabel.setText("From Location");

        toLocationLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        toLocationLabel.setText("To Location");

        timeOfDayLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        timeOfDayLabel.setText("Time of Day");

        backBtn.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        saveBtn.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        dateLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        dateLabel.setText("Date");

        numberOfRowsLabel.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        numberOfRowsLabel.setText("Number of Rows");

        timeOfDayComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Morning", "Day", "Evening" }));
        timeOfDayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timeOfDayComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(312, 312, 312)
                        .addComponent(createFlightScheduleLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(233, 233, 233)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(flightNumberLabel)
                            .addComponent(fromLocationLabel)
                            .addComponent(toLocationLabel)
                            .addComponent(timeOfDayLabel)
                            .addComponent(dateLabel)
                            .addComponent(numberOfRowsLabel))
                        .addGap(162, 162, 162)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(flightNumberTextField)
                            .addComponent(fromLocationTextField)
                            .addComponent(toLocationTextField)
                            .addComponent(numberOfRowsTextField)
                            .addComponent(dateChooserFlight, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                            .addComponent(timeOfDayComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(309, 309, 309)
                        .addComponent(backBtn)
                        .addGap(59, 59, 59)
                        .addComponent(saveBtn)))
                .addContainerGap(192, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(createFlightScheduleLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(flightNumberLabel)
                            .addComponent(flightNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(numberOfRowsLabel)
                            .addComponent(numberOfRowsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fromLocationLabel)
                            .addComponent(fromLocationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(toLocationLabel)
                            .addComponent(toLocationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(timeOfDayLabel)
                            .addComponent(timeOfDayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addComponent(dateLabel))
                    .addComponent(dateChooserFlight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backBtn)
                    .addComponent(saveBtn))
                .addContainerGap(148, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
                
        flag=0;
        if(flightNumberTextField.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Flight Number field cannot be empty");
            flightNumberTextField.setText("");
            flag=1;
        }
        
        if(fromLocationTextField.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "From Location field cannot be empty");
            fromLocationTextField.setText("");
            flag=1;
        }
        
        if(toLocationTextField.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "To Location field cannot be empty");
            toLocationTextField.setText("");
            flag=1;
        }
        
        /*if(timeOfDayTextField.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Time of Day field cannot be empty");
            timeOfDayTextField.setText("");
            flag=1;
        }*/
        
       /* if(dateTextField.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Date field cannot be empty");
            dateTextField.setText("");
            flag=1;
        }*/
        
        
       
         
        if (flag==0){             
            try{
                Integer.parseInt(numberOfRowsTextField.getText());                
            }
            catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Please enter numeric value only for number of seats field!!");
                return;
            }
             
            FlightSchedule flight = air.getFlightScheduleDirectory().addFlightSchedule();
            flight.setFlightNumber(String.valueOf(flightNumberTextField.getText()));
            flight.setNumberOfRows(Integer.parseInt(numberOfRowsTextField.getText()));
            flight.setFromLocation(fromLocationTextField.getText());
            flight.setToLocation(toLocationTextField.getText());
            //flight.setTimeOfDay(timeOfDayTextField.getText());
            flight.setDate(dateChooserFlight.getDate());
            flight.setTimeOfDay(String.valueOf(timeOfDayComboBox.getSelectedItem()));
            
            
            JOptionPane.showMessageDialog(null, "Flight Details added successfully");
        }
        else
            JOptionPane.showMessageDialog(null, "Unable to add flight details. Please enter correct values in fields!!");
              
    }//GEN-LAST:event_saveBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        travelAgencyContainer.remove(this);
        Component componentArray[]= travelAgencyContainer.getComponents();
        Component component = componentArray[componentArray.length-1];
        ManageFlightScheduleJPanel mfsjp = (ManageFlightScheduleJPanel)component;
        mfsjp.refreshTable();
        CardLayout layout= (CardLayout)travelAgencyContainer.getLayout();
        layout.previous(travelAgencyContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void timeOfDayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timeOfDayComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timeOfDayComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel createFlightScheduleLabel;
    private com.toedter.calendar.JDateChooser dateChooserFlight;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JLabel flightNumberLabel;
    private javax.swing.JTextField flightNumberTextField;
    private javax.swing.JLabel fromLocationLabel;
    private javax.swing.JTextField fromLocationTextField;
    private javax.swing.JLabel numberOfRowsLabel;
    private javax.swing.JTextField numberOfRowsTextField;
    private javax.swing.JButton saveBtn;
    private javax.swing.JComboBox timeOfDayComboBox;
    private javax.swing.JLabel timeOfDayLabel;
    private javax.swing.JLabel toLocationLabel;
    private javax.swing.JTextField toLocationTextField;
    // End of variables declaration//GEN-END:variables
}
